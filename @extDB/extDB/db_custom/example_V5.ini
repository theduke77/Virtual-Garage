[Default]
Version = 7

Number of Inputs = 0
; Default Value = 0

Sanitize Input Value Check = false
; Default Value = True

Sanitize Output Value Check = false
; Default Value = True

String Datatype Check = false
; Default Value = True
; If Database Type is String adds Quotations around Text / VarChar DataTypes when retrieving Values
;	Note: This Doesn't Work for Text DataTypes for MySQL but with Poco
;		Important try to avoid this, will break whenever extDB updates to 1.6/1.7 Poco

Strip = true
;Enable / Disable Strip

Strip Chars = `/\|;{}<>'
; Can't Strip Char : since its used as a divider in extDB.
; If you need it stripped you will need todo it in SQF Code.
; 	Note: if value contains divider :
; 		It will result in extDB reading to many input values + will return an error anyway.

;	Important if you are using $INPUT_STRING_x, recommended you strip the char `
;		That is the quotation char used to wrap strings

Strip Chars Action = STRIP
; Actions   NONE / STRIP / STRIP+LOG / STRIP+ERROR
;	None
;	Strip  
; 	Strip + Add Logs to extDB Logs
;	Strip + Error, doesnt execute SQL, reports error back to server


Prepared Statement Cache = true
; Allows you disable to Caching Prepared Statements, 
;	Useful to disable Per Call, for the SQL Statements you are only going to run once i.e at server startup
;	Also useful to disable global during testing, if you are altering Database Scheme on Live Server.


;; [CALL_NAME] INFO

;; ---------------------------------------
;; ---------------------------------------
;; SQLx_y   x = SQL Statement Line   y = SQL Statement Line x  Part y
;;		This allows for to define multiple SQL Prepared Statements to run with a single callextension.


;; Number of Inputs is the number of total inputs. If inputs received doesnt match this number. SQL Statement wont run.

;; SQLx_INPUTS   is INPUTS to use for SQL Line x
;; OUPUT is same as SQLx_INPUTS

;; INPUT / OUTPUT Options
;; 			STRING  Removes " from VALUE + then add " to either end of VALUE i.e "VALUE"
;;			BEGUID	Converts Value to BEGUID
;;			CHECK	Sanitize Check
;;			NOCHECK
;;			STRIP   Strip Chars (overrides Default Setting)
;;			STRIP
;;			AltisLifeRPG_Array    Converts Array format to Altis Life RPG format, for legacy support

;; They are separated by comma ,
;; Options themselves are tokenized by -
;; 		So the Option 1-STRING-BEGUID  means INPUT VALUE 1 -> converted to BEGUID + quotes added  (order of tokens makes no difference)




;; PLAYER INFO
;;


;;______________________________________________________________
[newPlayer]
;;

SQL1_1 = REPLACE INTO PlayerInfo (UID, Name, BattlEyeGUID)
SQL1_2 = 	VALUES (?, ?, ?);
SQL2_1 = REPLACE INTO PlayerSave (PlayerUID, MapID, Position)
SQL2_2 = 	VALUES (?, ?, '[]');

Number of Inputs = 3
SQL1_INPUTS = 2, 3, 2-BEGUID
SQL2_INPUTS = 2, 1


;;______________________________________________________________
[deadPlayer]
;;

SQL1_1 = REPLACE INTO PlayerSave (MapID, PlayerUID, Position)
SQL1_2 = 	VALUES (?, ?, '[]');

Number of Inputs = 2
SQL1_INPUTS = 1, 2




;;______________________________________________________________
;; PLAYER SAVE
;;

[getPlayerSave]
SQL1_1 = SELECT 
SQL1_2 = 	Position, Direction, Medical, 
SQL1_3 = 	CurrentWeapon, Stance, Uniform, Model, 
SQL1_4 = 	Headgear, Goggles, Vest, Backpack, 
SQL1_5 = 	UniformWeapons, UniformItems, UniformMagazines, 
SQL1_6 = 	VestWeapons, VestItems, VestMagazines, 
SQL1_7 = 	BackpackWeapons, BackpackItems, BackpackMagazines, 
SQL1_8 = 	PrimaryWeapon, SecondaryWeapon, HandgunWeapon,
SQL1_9 = 	PrimaryWeaponItems, SecondaryWeaponItems, HandgunItems, AssignedItems,
SQL1_10 = 	LoadedMagazines, Variables, GroupLeaderUID
SQL1_11 = FROM PlayerSave INNER JOIN PlayerInfo ON PlayerSave.PlayerUID=PlayerInfo.UID
SQL1_12 = WHERE MapID = ? AND PlayerUID = ?;

Number of Inputs = 2
SQL1_INPUTS = 1, 2
OUTPUT = 1, 2, 3, 4-STRING, 5-STRING, 6-STRING, 7-STRING, 8-STRING, 9-STRING, 10-STRING, 11-STRING, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21-STRING, 22-STRING, 23-STRING, 24, 25, 26, 27, 28, 29, 30-STRING


;;______________________________________________________________
[updatePlayerSaveAll]
;;
SQL1_1 = UPDATE PlayerSave
			;; 1-3
SQL1_2 = 	SET 	Position=?, Direction=?, Medical=?,
			;; 4-9
SQL1_3 = 		Goggles=?, Headgear=?, Vest=?, Backpack=?, Uniform=?, Model=?,
			;; 10-12
SQL1_4 = 		UniformWeapons=?, UniformItems=?, UniformMagazines=?, 
			;; 13-15
SQL1_5 =		VestWeapons=?, VestItems=?, VestMagazines=?, 
			;; 16-18
SQL1_6 = 		BackpackWeapons=?, BackpackItems=?, BackpackMagazines=?,
			;; 19-23
SQL1_7 =		CurrentWeapon = ?, Stance=?, PrimaryWeapon=?, SecondaryWeapon=?, HandgunWeapon=?,
			;; 24-26
SQL1_8 = 		PrimaryWeaponItems=?, SecondaryWeaponItems=?, HandgunItems=?,
			;; 27-28
SQL1_9 = 		AssignedItems=?, LoadedMagazines=?, 
			;; 29-30
SQL1_10 =		Variables=?, LastUpdated=NOW()
			;; 31
SQL1_11 = WHERE MapID=? AND PlayerUID=?;

Number of Inputs = 31
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31


;;______________________________________________________________
[updatePlayerGroup]
;;

SQL1_1 = UPDATE PlayerInfo
SQL1_2 = 	SET GroupLeaderUID=?, GroupMod=?
SQL1_3 = WHERE LeaderUID=?;

Number of Inputs = 3
SQL1_INPUTS = 2, 3, 1


;;______________________________________________________________
[newGroup]
;;


SQL1_1 = INSERT INTO PlayerGroups
SQL1_2 = 	SET 	LeaderUID=?, GroupName=?, GroupLevel=?;
SQL2_1 = UPDATE PlayerInfo
SQL2_2 = 	SET 	GroupLeaderUID=?, GroupMod="false"
SQL2_3 = WHERE UID=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3
SQL2_INPUTS = 1, 1


;;______________________________________________________________
[getGroup]
;;


SQL1_1 = SELECT GroupName, GroupLevel, UID, Name, GroupMod
SQL1_2 = 	FROM PlayerGroups INNER JOIN PlayerInfo
SQL1_3 = ON PlayerGroups.LeaderUID=PlayerInfo.GroupLeaderUID 
SQL1_4 = WHERE GroupLeaderUID=?;

Number of Inputs = 1
SQL1_INPUTS = 1
OUTPUT = 1-STRING, 2, 3-STRING, 4-STRING, 5


;;______________________________________________________________
[updateGroupLevel]
;;

SQL1_1 = UPDATE PlayerGroups
SQL1_2 = 	SET GroupLevel=?
SQL1_3 = WHERE LeaderUID=?;

Number of Inputs = 2
SQL1_INPUTS = 2, 1





;;______________________________________________________________
[deleteGroup]
;;

SQL1_1 = UPDATE PlayerInfo
SQL1_2 = 	SET GroupLeaderUID=NULL, GroupMod="false"
SQL1_3 = WHERE UID=?;

SQL2_1 = DELETE FROM PlayerGroups
SQL2_2 = 	WHERE LeaderUID=?;

Number of Inputs = 1

SQL1_INPUTS = 1
SQL2_INPUTS = 1





;;______________________________________________________________
[getBank]
;;

SQL1_1 = SELECT 
SQL1_2 = 	BankMoney
SQL1_3 = FROM PlayerInfo WHERE UID = ?;

Number of Inputs = 1
SQL1_INPUTS = 1


;;______________________________________________________________
[updateBank]
;;

SQL1_1 = UPDATE PlayerInfo
SQL1_2 = 	SET BankMoney = ?
SQL1_3 = FROM PlayerInfo WHERE UID = ?;

Number of Inputs = 2
SQL1_INPUTS = 2,1 


;;______________________________________________________________
[newTrader]
;;

SQL1_1 = REPLACE INTO Traders 
SQL1_2 = 	SET Items = ?, ServerID = ?, ID = ?;

Number of Inputs = 3
SQL1_INPUTS = 3,1,2


;;______________________________________________________________
[getTrader]
;;

SQL1_1 = SELECT Items FROM Traders 
SQL1_2 = 	WHERE ServerID = ? AND ID = ?;

Number of Inputs = 2
SQL1_INPUTS = 1,2


;;______________________________________________________________
[updateTrader]
;;

SQL1_1 = UPDATE Traders 
SQL1_2 = 	SET Items=?
SQL1_3 = WHERE ServerID=? AND ID=?;

Number of Inputs = 3
SQL1_INPUTS = 3, 1, 2


;;______________________________________________________________
[deleteTrader]
;;

SQL1_1 = DELETE FROM Traders 
SQL1_2 = 	WHERE ServerID = ? AND ID = ?;

Number of Inputs = 2
SQL1_INPUTS = 1,2


;;______________________________________________________________
[newVehicle]
;;

SQL1_1 = INSERT INTO Vehicles 
SQL1_2 = 	SET 	ServerID=?, MapID=?, ID=?,
SQL1_3 = 		Class=?, Color=?, Position=?, Vector=?,
SQL1_4 = 		Damage=?, HitPoints=?, Fuel=?,
SQL1_5 = 		`Inventory Weapons`=?, `Inventory Magazines`=?, `Inventory Items`=?, `Inventory Backpacks`=?,
SQL1_6 = 		MagazinesAmmo=?, 
SQL1_7 = 		`Cargo Ammo`=?, `Cargo Fuel`=?, `Cargo Repair`=?, 
SQL1_8 = 		Variables='[]';

Number of Inputs = 18
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;;______________________________________________________________
[updateVehicle]
;;

SQL1_1 = UPDATE Vehicles 
SQL1_2 = 	SET 	Class=?, Color=?, Position=?, Vector=?,
SQL1_3 = 		Damage=?, HitPoints=?, Fuel=?,
SQL1_4 = 		`Inventory Weapons`=?, `Inventory Magazines`=?, `Inventory Items`=?, `Inventory Backpacks`=?,
SQL1_5 = 		MagazinesAmmo=?, 
SQL1_6 = 		`Cargo Ammo`=?, `Cargo Fuel`=?, `Cargo Repair`=?, 
SQL1_7 = 		LastUpdated=NOW()
SQL1_8 = 	WHERE SERVERID=? AND MapID=? AND ID=?;

Number of Inputs = 18
SQL1_INPUTS = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3



;;______________________________________________________________
[getVehicles]
;;

SQL1_1 = SELECT
SQL1_2 = 	Class, Color, Position, Vector,
SQL1_3 = 	Damage, HitPoints, Fuel,
SQL1_4 = 	`Inventory Weapons`, `Inventory Magazines`, `Inventory Items`, `Inventory Backpacks`,
SQL1_5 = 	MagazinesAmmo, 
SQL1_6 = 	`Cargo Ammo`, `Cargo Fuel`, `Cargo Repair`, 
SQL1_7 = 	Variables, ID
SQL1_8 = FROM Vehicles WHERE SERVERID=? AND MapID=?;

Number of Inputs = 2
SQL1_INPUTS = 1, 2

OUTPUT = 1-STRING, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17-STRING


;;______________________________________________________________
[deleteVehicle]
;;

SQL1_1 = DELETE FROM Vehicles 
SQL1_2 = 	WHERE SERVERID=? AND MapID=? AND ID=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3


;;______________________________________________________________
[newBuilding]
;;

SQL1_1 = REPLACE INTO Buildings (ServerID, MapID, ID, StorageID, PlayerUID, Class, Position, Vector, Texture, LastUpdated)
SQL1_2 = 	VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW());


Number of Inputs = 9
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9


;;______________________________________________________________
[getBuildings]
;;

SQL1_1 = SELECT
SQL1_2 = 	ID, StorageID, PlayerUID,
SQL1_3 = 	Class, Position, Vector, Texture
SQL1_4 = FROM Buildings WHERE ServerID=? AND MapID=?;

Number of Inputs = 2
SQL1_INPUTS = 1, 2

OUTPUT = 1, 2-STRING, 3-STRING, 4-STRING, 5, 6, 7


;;______________________________________________________________
[upgradeBuilding]
;;

SQL1_1 = UPDATE Buildings
SQL1_2 = 	SET Class=?, LastUpdated=NOW()
SQL1_3 = WHERE ServerID=? AND MAPID=? AND ID=?;

Number of Inputs = 4
SQL1_INPUTS = 4, 1, 2, 3



;;______________________________________________________________
[paintBuilding]
;;

SQL1_1 = UPDATE Buildings
SQL1_2 = 	SET Texture=?, LastUpdated=NOW()
SQL1_3 = WHERE ServerID=? AND MAPID=? AND ID=?;

Number of Inputs = 4
SQL1_INPUTS = 4, 1, 2, 3


;;______________________________________________________________
[updateBuilding]
;;

SQL1_1 = UPDATE Buildings
SQL1_2 = 	LastUpdated=NOW()
SQL1_3 = WHERE ServerID=? AND MAPID=? AND ID=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3


;;______________________________________________________________
[deleteBuilding]
;;

SQL1_1 = DELETE FROM Buildings
SQL1_2 = 	WHERE ID=? AND ServerID=? AND MapID=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3



;;______________________________________________________________
[newStorage]
;;

SQL1_1 = REPLACE INTO Storage 
SQL1_2 = 	SET 		ServerID=?, MapID=?, ID=?, BuildingID=?,
SQL1_3 = 			Owners=?, Class=?, Position=?, Vector=?,
SQL1_4 = 			Texture=?, 
SQL1_5 = 			`Inventory Weapons`=?, `Inventory Magazines`=?, `Inventory Items`=?, `Inventory Backpacks`=?, 
SQL1_6 = 			LastUpdated=NOW();

Number of Inputs = 13
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13



;;______________________________________________________________
[getStorages]
;;

SQL1_1 = SELECT
SQL1_2 = 	ID, BuildingID, Owners,
SQL1_3 = 	Class, Position, Vector, Texture,
SQL1_4 = 	`Inventory Weapons`, `Inventory Magazines`, `Inventory Items`, `Inventory Backpacks`
SQL1_5 = FROM Storage WHERE ServerID=? AND MapID=?;

Number of Inputs = 2
SQL1_INPUTS = 1, 2

OUTPUT = 1-STRING, 2-STRING, 3, 4-STRING, 5, 6, 7, 8, 9, 10, 11


;;______________________________________________________________
[updateStorage]
;;

SQL1_1 = UPDATE Storage
SQL1_2 = 	SET 		`Inventory Weapons`=?, `Inventory Magazines`=?, `Inventory Items`=?, `Inventory Backpacks`=?,
SQL1_3 = 			LastUpdated=NOW()
SQL1_4 = WHERE ServerID=? AND MapID=? AND ID=?;

Number of Inputs = 7
SQL1_INPUTS = 4, 5, 6, 7, 1, 2, 3


;;______________________________________________________________
[deleteStorage]
;;

SQL1_1 = DELETE FROM Storage
SQL1_2 = 	WHERE ID=? AND ServerID=? AND MapID=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3
